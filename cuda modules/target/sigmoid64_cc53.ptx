//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_53
.address_size 64

	// .globl	sigmoid32
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;

.visible .entry sigmoid32(
	.param .u64 sigmoid32_param_0,
	.param .u32 sigmoid32_param_1
)
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<26>;
	.reg .f64 	%fd<26>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [sigmoid32_param_0];
	ld.param.u32 	%r4, [sigmoid32_param_1];
	mov.u32 	%r1, %tid.x;
	setp.ge.s32	%p2, %r1, %r4;
	@%p2 bra 	BB0_14;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f64 	%fd11, [%rd1];
	neg.f64 	%fd1, %fd11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	bfe.u32 	%r5, %r2, 20, 11;
	add.s32 	%r6, %r5, -1012;
	mov.b64 	 %rd5, %fd1;
	shl.b64 	%rd6, %rd5, %r6;
	setp.eq.s64	%p3, %rd6, -9223372036854775808;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd1;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd25, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.f64 	%fd12, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd12;
	}
	setp.lt.s32	%p4, %r3, 0;
	and.pred  	%p1, %p4, %p3;
	@!%p1 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_2:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7}, %fd25;
	}
	xor.b32  	%r8, %r7, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd25;
	}
	mov.b64 	%fd25, {%r9, %r8};

BB0_3:
	mov.f64 	%fd24, %fd25;
	setp.gt.s32	%p5, %r3, -1;
	@%p5 bra 	BB0_5;

	cvt.rzi.f64.f64	%fd13, %fd1;
	setp.neu.f64	%p6, %fd13, %fd1;
	selp.f64	%fd24, 0dFFF8000000000000, %fd24, %p6;

BB0_5:
	mov.f64 	%fd6, %fd24;
	add.rn.f64 	%fd7, %fd1, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd7;
	}
	and.b32  	%r11, %r10, 2146435072;
	setp.ne.s32	%p7, %r11, 2146435072;
	mov.f64 	%fd23, %fd6;
	@%p7 bra 	BB0_13;

	abs.f64 	%fd14, %fd1;
	setp.gtu.f64	%p8, %fd14, 0d7FF0000000000000;
	mov.f64 	%fd23, %fd7;
	@%p8 bra 	BB0_13;

	and.b32  	%r12, %r2, 2147483647;
	setp.ne.s32	%p9, %r12, 2146435072;
	@%p9 bra 	BB0_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd1;
	}
	setp.eq.s32	%p10, %r13, 0;
	@%p10 bra 	BB0_12;

BB0_9:
	and.b32  	%r14, %r3, 2147483647;
	setp.ne.s32	%p11, %r14, 2146435072;
	mov.f64 	%fd21, %fd6;
	mov.f64 	%fd23, %fd21;
	@%p11 bra 	BB0_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r15, %temp}, %fd12;
	}
	setp.ne.s32	%p12, %r15, 0;
	mov.f64 	%fd23, %fd6;
	@%p12 bra 	BB0_13;

	shr.s32 	%r16, %r2, 31;
	and.b32  	%r17, %r16, -2146435072;
	add.s32 	%r18, %r17, 2146435072;
	or.b32  	%r19, %r18, -2147483648;
	selp.b32	%r20, %r19, %r18, %p1;
	mov.u32 	%r21, 0;
	mov.b64 	%fd23, {%r21, %r20};
	bra.uni 	BB0_13;

BB0_12:
	shr.s32 	%r22, %r2, 31;
	and.b32  	%r23, %r22, -2146435072;
	add.s32 	%r24, %r23, 2146435072;
	mov.u32 	%r25, 0;
	mov.b64 	%fd23, {%r25, %r24};

BB0_13:
	add.rn.f64 	%fd16, %fd23, 0d3FF0000000000000;
	rcp.rn.f64 	%fd17, %fd16;
	setp.eq.f64	%p13, %fd1, 0d0000000000000000;
	selp.f64	%fd18, 0d3FE0000000000000, %fd17, %p13;
	st.global.f64 	[%rd1], %fd18;

BB0_14:
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<52>;
	.reg .f64 	%fd<135>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	mov.f64 	%fd13, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd13;
	}
	shr.u32 	%r50, %r49, 20;
	setp.ne.s32	%p1, %r50, 0;
	@%p1 bra 	BB1_2;

	mov.f64 	%fd14, 0d4365BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd14;
	}
	shr.u32 	%r16, %r49, 20;
	add.s32 	%r50, %r16, -54;

BB1_2:
	add.s32 	%r51, %r50, -1023;
	and.b32  	%r17, %r49, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd133, {%r48, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd133;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd133, {%r19, %r21};
	add.s32 	%r51, %r50, -1022;

BB1_4:
	add.rn.f64 	%fd16, %fd133, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd15,%fd16;
	// inline asm
	neg.f64 	%fd17, %fd16;
	mov.f64 	%fd18, 0d3FF0000000000000;
	fma.rn.f64 	%fd19, %fd17, %fd15, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd15, %fd15;
	add.rn.f64 	%fd22, %fd133, 0dBFF0000000000000;
	mul.rn.f64 	%fd23, %fd22, %fd21;
	add.rn.f64 	%fd24, %fd23, %fd23;
	mul.rn.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	mul.rn.f64 	%fd39, %fd25, %fd38;
	sub.rn.f64 	%fd40, %fd22, %fd24;
	add.rn.f64 	%fd41, %fd40, %fd40;
	neg.f64 	%fd42, %fd24;
	fma.rn.f64 	%fd43, %fd42, %fd22, %fd41;
	mul.rn.f64 	%fd44, %fd21, %fd43;
	add.rn.f64 	%fd45, %fd39, 0d3FB5555555555555;
	mov.f64 	%fd46, 0d3FB5555555555555;
	sub.rn.f64 	%fd47, %fd46, %fd45;
	add.rn.f64 	%fd48, %fd39, %fd47;
	add.rn.f64 	%fd49, %fd48, 0d0000000000000000;
	add.rn.f64 	%fd50, %fd49, 0dBC46A4CB00B9E7B0;
	add.rn.f64 	%fd51, %fd45, %fd50;
	sub.rn.f64 	%fd52, %fd45, %fd51;
	add.rn.f64 	%fd53, %fd50, %fd52;
	mul.rn.f64 	%fd54, %fd24, %fd24;
	neg.f64 	%fd55, %fd54;
	fma.rn.f64 	%fd56, %fd24, %fd24, %fd55;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd44;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd44;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd57, {%r22, %r24};
	fma.rn.f64 	%fd58, %fd24, %fd57, %fd56;
	mul.rn.f64 	%fd59, %fd54, %fd24;
	neg.f64 	%fd60, %fd59;
	fma.rn.f64 	%fd61, %fd54, %fd24, %fd60;
	fma.rn.f64 	%fd62, %fd54, %fd44, %fd61;
	fma.rn.f64 	%fd63, %fd58, %fd24, %fd62;
	mul.rn.f64 	%fd64, %fd51, %fd59;
	neg.f64 	%fd65, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd59, %fd65;
	fma.rn.f64 	%fd67, %fd51, %fd63, %fd66;
	fma.rn.f64 	%fd68, %fd53, %fd59, %fd67;
	add.rn.f64 	%fd69, %fd64, %fd68;
	sub.rn.f64 	%fd70, %fd64, %fd69;
	add.rn.f64 	%fd71, %fd68, %fd70;
	add.rn.f64 	%fd72, %fd24, %fd69;
	sub.rn.f64 	%fd73, %fd24, %fd72;
	add.rn.f64 	%fd74, %fd69, %fd73;
	add.rn.f64 	%fd75, %fd71, %fd74;
	add.rn.f64 	%fd76, %fd44, %fd75;
	add.rn.f64 	%fd77, %fd72, %fd76;
	sub.rn.f64 	%fd78, %fd72, %fd77;
	add.rn.f64 	%fd79, %fd76, %fd78;
	xor.b32  	%r25, %r51, -2147483648;
	mov.u32 	%r26, 1127219200;
	mov.b64 	%fd80, {%r25, %r26};
	mov.u32 	%r27, -2147483648;
	mov.b64 	%fd81, {%r27, %r26};
	sub.rn.f64 	%fd82, %fd80, %fd81;
	mov.f64 	%fd83, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd84, %fd82, %fd83, %fd77;
	neg.f64 	%fd85, %fd82;
	fma.rn.f64 	%fd86, %fd85, %fd83, %fd84;
	sub.rn.f64 	%fd87, %fd86, %fd77;
	sub.rn.f64 	%fd88, %fd79, %fd87;
	mov.f64 	%fd89, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd90, %fd82, %fd89, %fd88;
	add.rn.f64 	%fd91, %fd84, %fd90;
	sub.rn.f64 	%fd92, %fd84, %fd91;
	add.rn.f64 	%fd93, %fd90, %fd92;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd12;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd12;
	}
	mov.b64 	%fd94, {%r32, %r31};
	mul.rn.f64 	%fd95, %fd91, %fd94;
	neg.f64 	%fd96, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd94, %fd96;
	fma.rn.f64 	%fd98, %fd93, %fd94, %fd97;
	add.rn.f64 	%fd4, %fd95, %fd98;
	sub.rn.f64 	%fd99, %fd95, %fd4;
	add.rn.f64 	%fd5, %fd98, %fd99;
	mov.f64 	%fd100, 0d4338000000000000;
	mov.f64 	%fd101, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd102, %fd4, %fd101, %fd100;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd102;
	}
	mov.f64 	%fd103, 0dC338000000000000;
	add.rn.f64 	%fd104, %fd102, %fd103;
	mov.f64 	%fd105, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd106, %fd104, %fd105, %fd4;
	mov.f64 	%fd107, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd108, %fd104, %fd107, %fd106;
	mov.f64 	%fd109, 0d3E928AF3FCA213EA;
	mov.f64 	%fd110, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd111, %fd110, %fd108, %fd109;
	mov.f64 	%fd112, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd113, %fd111, %fd108, %fd112;
	mov.f64 	%fd114, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd115, %fd113, %fd108, %fd114;
	mov.f64 	%fd116, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd117, %fd115, %fd108, %fd116;
	mov.f64 	%fd118, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd119, %fd117, %fd108, %fd118;
	mov.f64 	%fd120, 0d3F81111111122322;
	fma.rn.f64 	%fd121, %fd119, %fd108, %fd120;
	mov.f64 	%fd122, 0d3FA55555555502A1;
	fma.rn.f64 	%fd123, %fd121, %fd108, %fd122;
	mov.f64 	%fd124, 0d3FC5555555555511;
	fma.rn.f64 	%fd125, %fd123, %fd108, %fd124;
	mov.f64 	%fd126, 0d3FE000000000000B;
	fma.rn.f64 	%fd127, %fd125, %fd108, %fd126;
	fma.rn.f64 	%fd128, %fd127, %fd108, %fd18;
	fma.rn.f64 	%fd129, %fd128, %fd108, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd129;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd129;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd134, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB1_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.rn.f64 	%fd130, %fd4, 0d7FF0000000000000;
	selp.f64	%fd134, 0d0000000000000000, %fd130, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB1_7;

	shr.u32 	%r36, %r13, 31;
	add.s32 	%r37, %r13, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd131, {%r14, %r40};
	sub.s32 	%r41, %r13, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd132, {%r44, %r43};
	mul.rn.f64 	%fd134, %fd131, %fd132;

BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd134;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB1_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd134;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB1_10;

BB1_9:
	fma.rn.f64 	%fd134, %fd134, %fd5, %fd134;

BB1_10:
	st.param.f64	[func_retval0+0], %fd134;
	ret;
}


